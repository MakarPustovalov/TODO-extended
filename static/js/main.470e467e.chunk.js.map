{"version":3,"sources":["assets/img/cross.svg","components/Task.js","assets/img/add.svg","components/TaskList.js","App.js","index.js"],"names":["Task","props","className","type","name","data","id","checked","onChange","checkboxHandler","description","src","crossSvg","alt","onClick","deleteHandler","TaskList","inputChangeHandler","value","inputValue","placeholder","add","submitHandler","item","tasks","map","App","state","JSON","parse","localStorage","getItem","bind","setLocalStorage","setItem","stringify","this","event","setState","currentTask","getTaskById","target","newTasks","filter","task","prevstate","prevState","newTask","Date","toString","preventDefault","document","getElementById","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.470e467e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cross.9c8cb56d.svg\";","import React from 'react';\r\nimport crossSvg from '../assets/img/cross.svg'\r\n\r\nfunction Task (props) {\r\n  return (\r\n    <>\r\n      <div className=\"task\">\r\n\r\n        <form className=\"task__inner\">\r\n\r\n          <input\r\n            type=\"checkbox\"\r\n            name={props.data.id}\r\n            checked={props.data.checked}\r\n            onChange={props.checkboxHandler}\r\n          /> <span></span>\r\n\r\n          <label\r\n            className={!props.data.checked ? 'task__text' : 'task__text checked'}\r\n          >\r\n            {props.data.description}\r\n          </label>\r\n\r\n          <img\r\n          src={crossSvg}\r\n          alt=\"Delete\"\r\n          className=\"task__delete\"\r\n          name={props.data.id}\r\n          onClick={props.deleteHandler}\r\n          />\r\n\r\n        </form>\r\n\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Task","export default __webpack_public_path__ + \"static/media/add.2b27604c.svg\";","import React from 'react';\r\nimport Task from './Task'\r\nimport add from '../assets/img/add.svg'\r\n\r\nfunction TaskList(props) {\r\n  return (\r\n    <div className=\"tasklist\">\r\n      <h1 className=\"tasklist__header\">Tasks for today</h1>\r\n\r\n      <form>\r\n\r\n        <input\r\n        className=\"tasklist__input\"\r\n        type=\"text\"\r\n        onChange={props.inputChangeHandler}\r\n        value={props.inputValue}\r\n        placeholder=\"Enter task description\"\r\n        id=\"task-input\"\r\n        />\r\n\r\n        <img src={add}\r\n        alt=\"Add task\"\r\n        className=\"tasklist__add\"\r\n        type=\"submit\"\r\n        value=\"+\"\r\n        onClick={props.submitHandler}\r\n        />\r\n\r\n      </form>\r\n\r\n      {props.item.tasks.map(item => {\r\n        return <Task\r\n        key={item.id}\r\n        data={item}\r\n        checkboxHandler={props.checkboxHandler}\r\n        deleteHandler={props.deleteHandler}\r\n        />\r\n      })}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList","import React, { Component } from 'react'\r\nimport TaskList from './components/TaskList'\r\n\r\nclass App extends Component {\r\n\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      tasks: JSON.parse(localStorage.getItem(\"tasks\")) ?\r\n      JSON.parse(localStorage.getItem(\"tasks\")):\r\n      [],\r\n      inputValue: '',\r\n    }\r\n    this.checkboxHandler = this.checkboxHandler.bind(this);\r\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.deleteHandler = this.deleteHandler.bind(this);\r\n    this.setLocalStorage = this.setLocalStorage.bind(this);\r\n  }\r\n\r\n  setLocalStorage () {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(this.state.tasks))\r\n  }\r\n\r\n  checkboxHandler (event) {\r\n    this.setState(state => {\r\n      let currentTask = this.getTaskById(event.target.name);\r\n      currentTask = {\r\n        ...currentTask,\r\n        checked: !currentTask.checked\r\n      }\r\n      const newTasks = state.tasks.map(item => {\r\n        return item.id === currentTask.id ? currentTask : item\r\n      })\r\n      return {...state, tasks: newTasks}\r\n    })\r\n  }\r\n\r\n  getTaskById (id) {\r\n    const currentTask = this.state.tasks.filter(task => {\r\n      return task.id === id\r\n    })\r\n    return currentTask[0]\r\n  }\r\n\r\n  inputChangeHandler (event) {\r\n    this.setState(prevstate => {\r\n      return {\r\n        ...prevstate,\r\n        inputValue: event.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  submitHandler (event) {\r\n    this.setState(prevState => {\r\n      const newTask = {\r\n        description: prevState.inputValue,\r\n        checked: false,\r\n        id: `idse-${(+new Date).toString(16)}`,\r\n      }\r\n      const newTasks = [\r\n        ...prevState.tasks,\r\n        newTask\r\n      ]\r\n      return {\r\n        ...prevState,\r\n        tasks: newTasks\r\n      }\r\n    })\r\n    event.preventDefault();\r\n    document.getElementById('task-input').value = '';\r\n  }\r\n\r\n  deleteHandler (event) {\r\n    this.setState(prevState => {\r\n      let currentTask = this.getTaskById(event.target.name);\r\n      let newTasks = prevState.tasks.filter(task => {\r\n        return task !== currentTask\r\n      })\r\n      return {\r\n        ...prevState,\r\n        tasks: newTasks\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    this.setLocalStorage();\r\n    return (\r\n      <>\r\n        <TaskList\r\n        item={this.state}\r\n        checkboxHandler={this.checkboxHandler}\r\n        inputChangeHandler={this.inputChangeHandler}\r\n        submitHandler={this.submitHandler}\r\n        deleteHandler={this.deleteHandler}\r\n        />\r\n      </>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}